name: Build and upload release binaries

on:
  release:
    types: [published]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Go
        run: |
          if [ $(uname -m) = "aarch64" ]; then
            wget https://golang.org/dl/go1.19.5.linux-arm64.tar.gz &&
            sudo tar -C /usr/local -xzf go1.19.5.linux-arm64.tar.gz
          else
            wget https://golang.org/dl/go1.19.5.linux-amd64.tar.gz &&
            sudo tar -C /usr/local -xzf go1.19.5.linux-amd64.tar.gz
          fi
          export PATH=$PATH:/usr/local/go/bin
      - name: Build release binary
        run: |
          cargo build --release
      - name: Upload Ubuntu binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/subgraph-radio
          asset_name: subgraph-radio-${{ github.event.release.tag_name }}-ubuntu
          asset_content_type: binary/octet-stream
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-go@v4
        with:
          go-version: "1.19.5"
      - name: Build release binary
        run: |
          cargo build --release
      - name: Upload MacOS binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/subgraph-radio
          asset_name: subgraph-radio-${{ github.event.release.tag_name }}-macos
          asset_content_type: binary/octet-stream
